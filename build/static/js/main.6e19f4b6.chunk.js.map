{"version":3,"sources":["stop.js","utilities.js","start.js","left.js","right.js","movedown.js","moveup.js","App.js","serviceWorker.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","Stop","GestureDescription","Finger","Index","Middle","Ring","Pinky","Thumb","addCurl","FingerCurl","NoCurl","addDirection","FingerDirection","VerticalUp","Start","HalfCurl","DiagonalUpLeft","FullCurl","HorizontalLeft","setWeight","Left","DiagonalUpRight","HorizontalRight","Right","Movedown","VerticalDown","DiagonalDownLeft","DiagonalDownRight","Moveup","App","webcamRef","useRef","canvasRef","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","max","apply","name","v","document","getElementById","innerHTML","getContext","className","ref","position","bottom","right","textAlign","zindex","transform","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6e19f4b6.chunk.js","sourcesContent":["// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const Stop = new GestureDescription('Stop'); \n\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky,Finger.Thumb]) {\n    Stop.addCurl(finger, FingerCurl.NoCurl, 1.0);\n    Stop.addDirection(finger, FingerDirection.VerticalUp, 1);\n    Stop.addDirection(finger, FingerDirection.VerticalUp, 1);\n  }","// Points for fingers\nconst fingerJoints = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n};\n\n// Infinity Gauntlet Style\nconst style = {\n  0: { color: \"yellow\", size: 15 },\n  1: { color: \"gold\", size: 6 },\n  2: { color: \"green\", size: 10 },\n  3: { color: \"gold\", size: 6 },\n  4: { color: \"gold\", size: 6 },\n  5: { color: \"purple\", size: 10 },\n  6: { color: \"gold\", size: 6 },\n  7: { color: \"gold\", size: 6 },\n  8: { color: \"gold\", size: 6 },\n  9: { color: \"blue\", size: 10 },\n  10: { color: \"gold\", size: 6 },\n  11: { color: \"gold\", size: 6 },\n  12: { color: \"gold\", size: 6 },\n  13: { color: \"red\", size: 10 },\n  14: { color: \"gold\", size: 6 },\n  15: { color: \"gold\", size: 6 },\n  16: { color: \"gold\", size: 6 },\n  17: { color: \"orange\", size: 10 },\n  18: { color: \"gold\", size: 6 },\n  19: { color: \"gold\", size: 6 },\n  20: { color: \"gold\", size: 6 },\n};\n\n// Drawing function\nexport const drawHand = (predictions, ctx) => {\n  // Check if we have predictions\n  if (predictions.length > 0) {\n    // Loop through each prediction\n    predictions.forEach((prediction) => {\n      // Grab landmarks\n      const landmarks = prediction.landmarks;\n\n      // Loop through fingers\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n        let finger = Object.keys(fingerJoints)[j];\n        //  Loop through pairs of joints\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n          // Get pairs of joints\n          const firstJointIndex = fingerJoints[finger][k];\n          const secondJointIndex = fingerJoints[finger][k + 1];\n\n          // Draw path\n          ctx.beginPath();\n          ctx.moveTo(\n            landmarks[firstJointIndex][0],\n            landmarks[firstJointIndex][1]\n          );\n          ctx.lineTo(\n            landmarks[secondJointIndex][0],\n            landmarks[secondJointIndex][1]\n          );\n          ctx.strokeStyle = \"plum\";\n          ctx.lineWidth = 4;\n          ctx.stroke();\n        }\n      }\n\n      // Loop through landmarks and draw em\n      for (let i = 0; i < landmarks.length; i++) {\n        // Get x point\n        const x = landmarks[i][0];\n        // Get y point\n        const y = landmarks[i][1];\n        // Start drawing\n        ctx.beginPath();\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\n\n        // Set line color\n        ctx.fillStyle = style[i][\"color\"];\n        ctx.fill();\n      }\n    });\n  }\n};\n","// // Import dependencies\n// import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\n\n// // Define Gesture Description\n// export const Start = new GestureDescription('Start');\n\n// Start.addCurl(Finger.Thumb, FingerCurl.FullCurl, 1);\n// Start.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 1);\n// Start.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1);\n// Start.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.75);\n// Start.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.75);\n\n// for (let finger of[Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n\n//     Start.addCurl(finger, FingerCurl.FullCurl, 1.0);\n//     Start.addCurl(finger, FingerCurl.HalfCurl, 1.0);\n//     Start.addDirection(finger, FingerDirection.VerticalUp, 0.75);\n//     // Start.addDirection(finger, FingerDirection.DiagonalUpLeft, 1.0);\n//     // Start.addDirection(finger, FingerDirection.HorizontalLeft, 0.2);\n//     // Start.addDirection(finger, FingerDirection.DiagonalUpRight, 1.0);\n//     // Start.addDirection(finger, FingerDirection.HorizontalRight, 0.2);\n// }\n\n\n\n// Import dependencies\nimport { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\n\n// describe victory gesture ✌️\nexport const Start = new GestureDescription('Start');\n\n\n// thumb:\nStart.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\nStart.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\nStart.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\nStart.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\n\n// index:\nStart.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\nStart.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.75);\nStart.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\n\n// middle:\nStart.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\nStart.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1.0);\nStart.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 0.75);\n\n// ring:\nStart.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\nStart.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.2);\nStart.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 1.0);\nStart.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.2);\n\n// pinky:\nStart.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\nStart.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\nStart.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 1.0);\nStart.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.2);\n\n// give additional weight to index and ring fingers\nStart.setWeight(Finger.Index, 2);\nStart.setWeight(Finger.Middle, 2);\n\nexport default Start;","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const Left = new GestureDescription('Left'); \n\nLeft.addCurl(Finger.Thumb,FingerCurl.HalfCurl,1);\nLeft.addCurl(Finger.Thumb,FingerCurl.NoCurl,1);\nLeft.addDirection(Finger.Thumb,FingerDirection.VerticalUp,1);\nLeft.addDirection(Finger.Thumb,FingerDirection.DiagonalUpLeft,0.75);\nLeft.addDirection(Finger.Thumb,FingerDirection.DiagonalUpRight,0.75);\n\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n\n    Left.addCurl(finger, FingerCurl.NoCurl, 1.0);\n    Left.addDirection(finger, FingerDirection.HorizontalRight, 1);\n    //Left.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75);\n    //Left.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.50);\n  }","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const Right = new GestureDescription('Right'); \n\nRight.addCurl(Finger.Thumb,FingerCurl.HalfCurl,1);\nRight.addCurl(Finger.Thumb,FingerCurl.NoCurl,1);\nRight.addDirection(Finger.Thumb,FingerDirection.VerticalUp,1);\nRight.addDirection(Finger.Thumb,FingerDirection.DiagonalUpLeft,0.75);\nRight.addDirection(Finger.Thumb,FingerDirection.DiagonalUpRight,0.75);\n\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n\n    Right.addCurl(finger, FingerCurl.NoCurl, 1.0);\n    Right.addDirection(finger, FingerDirection.HorizontalLeft, 1);\n    //Left.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75);\n    //Left.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.50);\n  }","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const Movedown = new GestureDescription('Movedown'); \n\nMovedown.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\nMovedown.addDirection(Finger.Thumb, FingerDirection.VerticalDown, 1.0);\nMovedown.addDirection(Finger.Thumb, FingerDirection.DiagonalDownLeft, 0.5);\nMovedown.addDirection(Finger.Thumb, FingerDirection.DiagonalDownRight, 0.5);\n\n// all other fingers:\n// - curled\n// - horizontal left or right\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n    Movedown.addCurl(finger, FingerCurl.FullCurl, 1.0);\n    Movedown.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\n    Movedown.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\n}","// Import dependencies\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \n\n// Define Gesture Description\nexport const Moveup = new GestureDescription('Moveup'); \n\nMoveup.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\nMoveup.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\nMoveup.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.25);\nMoveup.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.25);\n\n// all other fingers:\n// - curled\n// - horizontal left or right\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n    Moveup.addCurl(finger, FingerCurl.FullCurl, 1.0);\n    Moveup.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\n    Moveup.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\n}","// Importing all neccesary libraries\nimport \"./App.css\";\nimport React, { useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport * as fp from \"fingerpose\";\n\n// Importing pre-defined gesture (using fingerpose library)\nimport { Stop } from \"./stop\";\nimport { Start } from \"./start\";\nimport { Left } from \"./left\";\nimport { Right } from \"./right\";\nimport { Movedown } from \"./movedown\";\nimport { Moveup } from \"./moveup\";\n\nfunction App() {\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    const runHandpose = async() => {\n        // loading handpose model\n        const net = await handpose.load(); //It returns neutral network (net).\n        console.log(\"Handpose model loaded.\");\n        //  Loop and detect hands\n        setInterval(() => {\n            detect(net);// for detecting hand 'detect' function is called.\n        }, 100);// calling detect function after every 100 ms.\n    };\n\n    const detect = async(net) => {\n        // Check data is available\n        if (\n            typeof webcamRef.current !== \"undefined\" &&\n            webcamRef.current !== null &&\n            webcamRef.current.video.readyState === 4\n        ) {\n            // Get Video Properties\n            const video = webcamRef.current.video;\n            const videoWidth = webcamRef.current.video.videoWidth;\n            const videoHeight = webcamRef.current.video.videoHeight;\n\n            // Set video width\n            webcamRef.current.video.width = videoWidth;\n            webcamRef.current.video.height = videoHeight;\n\n            // Set canvas height and width\n            canvasRef.current.width = videoWidth;\n            canvasRef.current.height = videoHeight;\n\n            // Make Detections\n            const hand = await net.estimateHands(video);\n            // console.log(hand);\n\n            // if hand is detected then:\n            if (hand.length > 0) {\n\n                // Loading the pre-defined gesture into GE for calculating the confidence by comparing with the detected hand gesture\n                const GE = new fp.GestureEstimator([\n                    Stop,\n                    Start,\n                    Left,\n                    Right,\n                    Moveup,\n                    Movedown,\n                ]);\n                \n                // The gesture of the hand is detected \n                const gesture = await GE.estimate(hand[0].landmarks, 7);\n\n                if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n                    // console.log(gesture.gestures);\n\n\n                    // It is then compared with the predefined gesture and confidence value is calculated\n                    const confidence = gesture.gestures.map(\n                        (prediction) => prediction.confidence\n                    );\n\n                    // Amongst the different confidence value againt all the pre-defined gesture the max value is taken\n                    const maxConfidence = confidence.indexOf(\n                        Math.max.apply(null, confidence)\n                    );\n                    console.log(gesture.gestures[maxConfidence].name);\n                    var v = gesture.gestures[maxConfidence].name\n                    \n                    // The detected gesture is then save into a invisible div ,which is the send to the unity for movement of the character model(see /public/index.html)\n                    document.getElementById(\"insert\").innerHTML = v;\n                    \n                }\n            }\n\n            const ctx = canvasRef.current.getContext(\"2d\");\n            drawHand(hand, ctx);\n        }\n    };\n\n\n    // calling runHandpose function, which in turn run detect function .\n    runHandpose();\n\n    // Styling of the unity container and the camera feed window.\n    return ( \n        <div className = \"App\" >\n            <header className = \"App-header\" >\n                <Webcam ref = { webcamRef }\n                style = {\n                    {\n                        position: \"absolute\",\n                        bottom: 0,\n                        right: 0,\n                        // marginLeft: \"auto\",\n                        // marginRight: \"auto\",\n                        // left: 0,\n                        // right: 0,\n                        textAlign: \"center\",\n                        zindex: 9,\n                        width: 250,\n                        height: 188,\n                        transform: 'scaleX(-1)',\n                    }\n                }\n                />\n\n                <canvas ref = { canvasRef }\n                style = {\n                    {\n                        position: \"absolute\",\n                        bottom: 0,\n                        right: 0,\n                        // marginLeft: \"auto\",\n                        // marginRight: \"auto\",\n                        // left: 0,\n                        // right: 0,\n                        textAlign: \"center\",\n                        zindex: 9,\n                        width: 250,\n                        height: 188,\n                        transform: 'scaleX(-1)',\n                    }\n                }\n                />\n\n            </header>  \n        </div >\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}